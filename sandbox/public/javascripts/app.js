// Generated by CoffeeScript 1.6.3
(function() {
  var app, run;

  app = angular.module("sandbox", ["ngRoute"]);

  app.config(function($routeProvider) {
    return $routeProvider.when("/", {
      templateUrl: "partials/index"
    }).otherwise({
      redirectTo: "/error",
      templateUrl: "partials/404"
    });
  });

  app.controller("HelpCtrl", function($scope) {
    $scope.header = {
      command: "Command",
      description: "Description"
    };
    return $scope.helper = [
      {
        command: "help",
        description: "See what you are reading now."
      }, {
        command: "clear",
        description: "Revert back to original state."
      }, {
        command: "reload",
        description: "Reload the current page."
      }, {
        command: "posts",
        description: "Redirects to the 'posts' page."
      }
    ];
  });

  app.directive("enter", function() {
    var CommandCtrl;
    return {
      restrict: "A",
      scope: {},
      controller: CommandCtrl = (function() {
        function CommandCtrl($scope) {
          $scope.help = function() {
            $(".cmd").addClass("shift");
            return $(".sheet").addClass("shift");
          };
          $scope.clear = function() {
            $(".cmd").removeClass("shift");
            return $(".sheet").removeClass("shift");
          };
          $scope.redirect = function(path) {
            return window.location.href = "http://" + window.location.host + "/" + path;
          };
        }

        return CommandCtrl;

      })(),
      link: function(scope, element) {
        return element.bind("keypress", function(e) {
          var cache, dir, text;
          if (e.keyCode === 13) {
            text = $(".cmd").val();
            $(".cmd").val("");
            dir = {
              "up": "top",
              "down": "bottom",
              "left": "left",
              "right": "right"
            };
            if (dir[text] !== void 0) {
              cache = $(".cmd").css(dir[txt]);
              if (cache === "") {
                cache = 0;
              }
              return $(".cmd").css(dir[text], (parseFloat(cache) - 100) + "px");
            } else {
              switch (text) {
                case "help":
                  return scope.help();
                case "clear":
                  return scope.clear();
                case "reload":
                  return scope.redirect("");
                case "posts":
                  return scope.redirect("posts");
              }
            }
          }
        });
      }
    };
  });

  run = function() {
    var check, cmd, sheet;
    check = document.getElementsByClassName("cmd")[0].style.width;
    cmd = $(".cmd");
    sheet = $(".sheet");
    cmd.width((cmd.width() - 26) + "px");
    return cmd.focus();
  };

  setTimeout(run, 500);

}).call(this);
